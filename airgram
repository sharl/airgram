#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename;
use Getopt::Long;
use Config::Tiny;
use LWP::UserAgent;
use HTTP::Request::Common qw(POST);

my $script = basename($0);

sub usage {
    my $err = shift || '';

    print STDERR <<EOF;
$err
usage: $script [-b] [-f <conf>] [-u <URL>] [message]

	-b --broadcast	broadcast message
	-f conf
	--config conf	use conf instead of default
			default conf is $ENV{HOME}/.$script
	-u URL
	--url URL	specify URL

EOF
;
    exit 1;
}

GetOptions(
    'broadcast'  => \my $broadcast,
    'config|f=s' => \my $conf,
    'url=s'      => \my $url,
    ) or usage();

$conf ||= $ENV{HOME} . '/.' . $script;
my $ini = Config::Tiny->read($conf);
$ini or usage(Config::Tiny->errstr);

my $method = $broadcast ? 'broadcast' : 'send';

my $email          = $broadcast ? undef : $ini->{_}{email};
my $SERVICE_KEY    = $ini->{_}{Key};
my $SERVICE_SECRET = $ini->{_}{Secret};

my $message = join(' ', @ARGV);
if (! $message) {
    $message = join('', <STDIN>);
    $message =~ s/[\r\n]+/ /g;
    $message =~ s/\s+$//;
}
exit unless $message;

my %formdata = ( email => $email, msg => $message, url => $url);
my $req = POST('https://api.airgramapp.com/1/' . $method, [%formdata]);
$req->authorization_basic($SERVICE_KEY, $SERVICE_SECRET);

my $ua = LWP::UserAgent->new(timeout => 10);
my $res = $ua->request($req);
if (! $res->is_success) {
    print $res->message . "\n";
}
